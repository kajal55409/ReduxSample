{"ast":null,"code":"export var KeepAwakeEventState;\n\n(function (KeepAwakeEventState) {\n  KeepAwakeEventState[\"RELEASE\"] = \"release\";\n})(KeepAwakeEventState || (KeepAwakeEventState = {}));","map":{"version":3,"mappings":"AAOA,WAAYA,mBAAZ;;AAAA,WAAYA,mBAAZ,EAA+B;EAC7BA;AACD,CAFD,EAAYA,mBAAmB,KAAnBA,mBAAmB,MAA/B","names":["KeepAwakeEventState"],"sourceRoot":"","sources":["../src/KeepAwake.types.ts"],"sourcesContent":["// @needsAudit\nexport type KeepAwakeEvent = {\n  /** Keep awake state. */\n  state: KeepAwakeEventState;\n};\n\n// @needsAudit\nexport enum KeepAwakeEventState {\n  RELEASE = 'release',\n}\n\n// @needsAudit\nexport type KeepAwakeListener = (event: KeepAwakeEvent) => void;\n\nexport type KeepAwakeOptions = {\n  /**\n   * The call will throw an unhandled promise rejection on Android when the original Activity is dead or deactivated.\n   * Set the value to `true` for suppressing the uncaught exception.\n   */\n  suppressDeactivateWarnings?: boolean;\n\n  /**\n   * A callback that is invoked when the keep-awake state changes.\n   * @platform web\n   */\n  listener?: KeepAwakeListener;\n};\n"]},"metadata":{},"sourceType":"module"}